{"version":3,"sources":["icons/googleIcon.svg","icons/sendIcon.svg","components/ChatRoom.js","components/App.js","index.js"],"names":["module","exports","aes256","require","ChatMessage","props","message","text","uid","photoURL","messageClass","auth","currentUser","className","src","alt","cryptoKey","decrypt","ChatRoom","dummy","useRef","messagesRef","firebase","firestore","collection","query","orderBy","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","document","getElementById","focus","add","encrypt","createdAt","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","map","msg","key","id","ref","onSubmit","type","value","onChange","target","onClick","setTimeout","placeholder","disabled","sendIcon","config","initializeApp","JSON","parse","process","CryptoKey","setKey","role","aria-label","SignIn","loading","setLoading","signInAnonymously","catch","error","console","log","class","aria-hidden","style","color","provider","GoogleAuthProvider","signInWithPopup","googleIcon","SignOut","signOut","click","ClearChat","db","devNote","get","then","querySnapshot","forEach","doc","includes","delete","App","useAuthState","user","href","data-toggle","data-target","aria-controls","aria-expanded","ReactDOM","render"],"mappings":"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","file":"static/js/main.7af04232.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/googleIcon.af68e760.svg\";","module.exports = __webpack_public_path__ + \"static/media/sendIcon.14f8dffe.svg\";","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport sendIcon from \"../icons/sendIcon.svg\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n/* Firebase Imports */\r\nimport firebase from \"firebase/app\";\r\n\r\nvar aes256 = require(\"aes256\");\r\n\r\nfunction ChatRoom(props) {\r\n  const dummy = useRef();\r\n  const firestore = props.firebase.firestore();\r\n  const messagesRef = firestore.collection(\"messages\");\r\n  const query = messagesRef.orderBy(\"createdAt\");\r\n\r\n  const [messages] = useCollectionData(query, { idField: \"id\" });\r\n\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    document.getElementById(\"msg-input\").focus();\r\n\r\n    const { uid, photoURL } = props.auth.currentUser;\r\n    setFormValue(\"\");\r\n\r\n    await messagesRef.add({\r\n      text: aes256.encrypt(props.cryptoKey, formValue),\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    dummy && dummy.current.scrollIntoView();\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        {messages &&\r\n          messages.map((msg) => (\r\n            <ChatMessage\r\n              key={msg.id}\r\n              message={msg}\r\n              cryptoKey={props.cryptoKey}\r\n              auth={props.auth}\r\n            />\r\n          ))}\r\n        <span ref={dummy} id=\"dummy\"></span>\r\n      </main>\r\n\r\n      <form onSubmit={sendMessage} className=\"msg-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n          onClick={() => {\r\n            setTimeout(() => {\r\n              dummy.current.scrollIntoView();\r\n            }, 300);\r\n          }}\r\n          placeholder=\"Type a message\"\r\n          id=\"msg-input\"\r\n        />\r\n        <button type=\"submit\" disabled={!formValue}>\r\n          <img src={sendIcon} alt=\"send icon\" />\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === props.auth.currentUser.uid ? \"sent\" : \"received\";\r\n\r\n  return (\r\n    <>\r\n      <div className={` ${messageClass} d-flex align-items-center`}>\r\n        <img\r\n          src={\r\n            photoURL ||\r\n            \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n          }\r\n          alt=\"Profile Pic\"\r\n          className=\"profile-img mb-auto\"\r\n        />\r\n        {props.cryptoKey !== \"\" && (\r\n          <p>{aes256.decrypt(props.cryptoKey, text)}</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatRoom;\r\n","/* React Imports */\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n/* Firebase Imports */\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n/* Firebase Hooks Imports */\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n/* Icons Imports */\r\nimport googleIcon from \"../icons/googleIcon.svg\";\r\n/* Components Import */\r\nimport ChatRoom from \"./ChatRoom\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nfirebase.initializeApp(JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG));\r\nconst auth = firebase.auth();\r\n\r\n// const bcrypt = require(\"bcryptjs\");\r\n\r\nfunction App() {\r\n  const [user] = useAuthState(auth);\r\n  const [key, setKey] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"navbar navbar-expand-lg fixed-top navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"/#\">\r\n          <h1>\r\n            <span role=\"img\" aria-label=\"msg\">\r\n              ðŸ’¬\r\n            </span>\r\n          </h1>\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          id=\"navbar-btn\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarText\"\r\n          aria-controls=\"navbarText\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {key !== \"\" && (\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/#\">\r\n                  <ClearChat />\r\n                </a>\r\n              </li>\r\n            )}\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/#\">\r\n                <SignOut className=\"mb-3\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      <section>\r\n        {user ? (\r\n          key === \"\" ? (\r\n            <CryptoKey setKey={(key) => setKey(key)} />\r\n          ) : (\r\n            <ChatRoom cryptoKey={key} auth={auth} firebase={firebase} />\r\n          )\r\n        ) : (\r\n          <SignIn />\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CryptoKey(props) {\r\n  setTimeout(() => {\r\n    document.getElementById(\"key-input\").focus();\r\n  }, 100);\r\n\r\n  // const db = firebase.firestore();\r\n\r\n  const verifyKey = (e) => {\r\n    e.preventDefault();\r\n    props.setKey(document.getElementById(\"key-input\").value);\r\n    // const inputKey = document.getElementById(\"key-input\").value;\r\n    // var docRef = db.collection(\"cryptoKey\").doc(\"details\");\r\n    // docRef\r\n    //   .get()\r\n    //   .then(function (doc) {\r\n    //     if (doc.exists) {\r\n    //       //Checking account status.\r\n    //       if (!doc.data().status) {\r\n    //         alert(\"Account Blocked! Contact Admin!\");\r\n    //         return;\r\n    //       }\r\n    //       // Validating the crypto Key.\r\n    //       if (bcrypt.compareSync(inputKey, doc.data().key)) {\r\n    //         props.setKey(inputKey);\r\n    //       } else {\r\n    //         alert(\"Wrong Crypto Key!\");\r\n    //         document.getElementById(\"key-input\").value = \"\";\r\n    //         document.getElementById(\"key-input\").focus();\r\n    //         //Limiting wrong attempts.\r\n    //         if (doc.data().wrongAttempts >= 10000) {\r\n    //           db.collection(\"cryptoKey\")\r\n    //             .doc(\"details\")\r\n    //             .update({\r\n    //               wrongAttempts: firebase.firestore.FieldValue.increment(1),\r\n    //               status: false,\r\n    //             });\r\n    //         } else {\r\n    //           db.collection(\"cryptoKey\")\r\n    //             .doc(\"details\")\r\n    //             .update({\r\n    //               wrongAttempts: firebase.firestore.FieldValue.increment(1),\r\n    //             });\r\n    //         }\r\n    //       }\r\n    //     } else {\r\n    //       alert(\"Please check your network connection!\");\r\n    //     }\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.log(\"Error getting document:\", error);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"crypto-from\">\r\n        <div className=\"form-group\">\r\n          <label>\r\n            <h3>Enter Crpto Key</h3>\r\n          </label>\r\n          <input type=\"password\" className=\"form-control\" id=\"key-input\" />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          id=\"key-btn\"\r\n          onClick={verifyKey}\r\n        >\r\n          Submit\r\n        </button>\r\n        <small className=\"form-text text-muted mt-5\">\r\n          â€¢ (For Demo) Crypto key is \"demo\".\r\n        </small>\r\n        <small className=\"form-text text-muted\">\r\n          â€¢ Once try entering any wrong key also{\" \"}\r\n          <span role=\"img\" aria-label=\"blink\">\r\n            ðŸ˜‰.\r\n          </span>\r\n        </small>\r\n        <small className=\"form-text text-muted\">\r\n          â€¢ We can also block account if user enters wrong key many timmes.\r\n        </small>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SignIn() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n  const signInAnonymously = () => {\r\n    setLoading(true);\r\n    firebase\r\n      .auth()\r\n      .signInAnonymously()\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"btn btn-info btn-lg sign-in \"\r\n        onClick={signInAnonymously}\r\n      >\r\n        {loading ? (\r\n          <>\r\n            <span\r\n              class=\"spinner-border spinner-border mr-2\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            Logging in...\r\n          </>\r\n        ) : (\r\n          <>\r\n            <img\r\n              alt=\"Anonymous Mask icon\"\r\n              src=\"https://img.icons8.com/ios/344/anonymous-mask.png\"\r\n            ></img>\r\n            <span style={{ color: \"black\" }}>Log in Anonymously</span>\r\n          </>\r\n        )}\r\n      </button>\r\n      <button\r\n        className=\"btn btn-light btn-lg sign-in mt-4\"\r\n        onClick={signInWithGoogle}\r\n      >\r\n        <img src={googleIcon} alt=\"Google Icon\" />\r\n        <span className=\"ml-3\">Log in with Google</span>\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SignOut() {\r\n  return (\r\n    auth.currentUser && (\r\n      <button\r\n        className=\"btn btn-danger sign-out\"\r\n        onClick={() => {\r\n          auth.signOut();\r\n          document.getElementById(\"navbar-btn\").click();\r\n        }}\r\n      >\r\n        Sign Out\r\n      </button>\r\n    )\r\n  );\r\n}\r\n\r\nfunction ClearChat() {\r\n  const db = firebase.firestore();\r\n\r\n  var devNote = [\r\n    \"2FzVSgbCMZYQXfJendY2\",\r\n    \"H5PcCZb5mziybihyO6de\",\r\n    \"ImzRj5F8FLs9hUsr8k79\",\r\n    \"LJC4Fa3Sg1AEVv6ou0K3\",\r\n    \"xq4rwYo5KyYPQfmuSQP2xq4rwYo5KyYPQfmuSQP2\",\r\n  ];\r\n\r\n  const handleClear = () => {\r\n    db.collection(\"messages\")\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          if (!devNote.includes(doc.id)) {\r\n            db.collection(\"messages\").doc(doc.id).delete();\r\n          }\r\n        });\r\n        document.getElementById(\"navbar-btn\").click();\r\n      });\r\n  };\r\n\r\n  return (\r\n    auth.currentUser && (\r\n      <button className=\"btn btn-outline-info sign-out\" onClick={handleClear}>\r\n        Clear Chat\r\n      </button>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}